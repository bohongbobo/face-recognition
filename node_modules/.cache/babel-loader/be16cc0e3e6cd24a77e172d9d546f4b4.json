{"ast":null,"code":"var _jsxFileName = \"/Users/bobo/Desktop/gitHub/face-recognition/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Navigation from './componments/Navigation/Navigation';\nimport Logo from './componments/Logo/Logo';\nimport ImageLinkForm from './componments/ImageLinkForm/ImageLinkForm';\nimport Rank from './componments/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './componments/FaceRecognition/FaceRecognition';\nimport Signin from './componments/Signin/Signin';\nimport Register from './componments/Register/Register';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 350\n      }\n    }\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: '1b2bc0835cbd40fa92081345abe6bef1'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImg');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height,\n        leftCol: clarifaiFace.left_col * width\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState({\n              users: {\n                entries: count\n              }\n            });\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imgUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imgUrl = _this$state.imgUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imgUrl: imgUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bobo/Desktop/gitHub/face-recognition/src/App.js"],"names":["React","Navigation","Logo","ImageLinkForm","Rank","Particles","Component","Clarifai","FaceRecognition","Signin","Register","particlesOptions","particles","number","value","density","enable","value_area","app","App","apiKey","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","leftCol","left_col","displayFaceBox","box","console","log","onInputChange","event","input","target","onButtonSubmit","imgUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","users","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Navigation from './componments/Navigation/Navigation';\nimport Logo from './componments/Logo/Logo';\nimport ImageLinkForm from './componments/ImageLinkForm/ImageLinkForm';\nimport Rank from './componments/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './componments/FaceRecognition/FaceRecognition';\nimport Signin from './componments/Signin/Signin';\nimport Register from './componments/Register/Register'\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 350\n      }\n    }\n  }\n}\n\nconst app = new Clarifai.App({\n  apiKey: '1b2bc0835cbd40fa92081345abe6bef1'\n});\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state ={\n      input: '',\n      imgUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n  // componentDidMount(){\n  //   fetch('http://localhost:3000')\n  //   .then(response => response.json())\n  //   .then(console.log)\n  // }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImg');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n      leftCol: clarifaiFace.left_col * width\n    }\n  }\n\ndisplayFaceBox = (box) => {\n  console.log(box);\n  this.setState({box: box});\n}\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imgUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => {\n        if(response){\n          fetch('http://localhost:3000/image', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState({users: {\n              entries: count\n            }})\n          })\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState({isSignedIn: false})\n    } else if(route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n  \n  render(){\n    const { isSignedIn, imgUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n            <FaceRecognition box={box} imgUrl={imgUrl} />\n          </div>\n          : (\n            route === 'signin'\n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}