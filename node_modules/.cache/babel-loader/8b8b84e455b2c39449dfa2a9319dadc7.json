{"ast":null,"code":"var _jsxFileName = \"/Users/bobo/Desktop/gitHub/face-recognition/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Navigation from './componments/Navigation/Navigation';\nimport Logo from './componments/Logo/Logo';\nimport ImageLinkForm from './componments/ImageLinkForm/ImageLinkForm';\nimport Rank from './componments/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './componments/FaceRecognition/FaceRecognition';\nimport Signin from './componments/Signin/Signin';\nimport Register from './componments/Register/Register';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 350\n      }\n    }\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: '1b2bc0835cbd40fa92081345abe6bef1'\n});\nconst initialState = {\n  input: '',\n  imgUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImg');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height,\n        leftCol: clarifaiFace.left_col * width\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imgUrl = _this$state.imgUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imgUrl: imgUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bobo/Desktop/gitHub/face-recognition/src/App.js"],"names":["React","Navigation","Logo","ImageLinkForm","Rank","Particles","Component","Clarifai","FaceRecognition","Signin","Register","particlesOptions","particles","number","value","density","enable","value_area","app","App","apiKey","initialState","input","imgUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","leftCol","left_col","displayFaceBox","console","log","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Navigation from './componments/Navigation/Navigation';\nimport Logo from './componments/Logo/Logo';\nimport ImageLinkForm from './componments/ImageLinkForm/ImageLinkForm';\nimport Rank from './componments/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './componments/FaceRecognition/FaceRecognition';\nimport Signin from './componments/Signin/Signin';\nimport Register from './componments/Register/Register'\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 350\n      }\n    }\n  }\n}\n\nconst app = new Clarifai.App({\n  apiKey: '1b2bc0835cbd40fa92081345abe6bef1'\n});\n\nconst initialState = {\n  input: '',\n  imgUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initialState;\n  }\n\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n  // componentDidMount(){\n  //   fetch('http://localhost:3000')\n  //   .then(response => response.json())\n  //   .then(console.log)\n  // }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImg');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n      leftCol: clarifaiFace.left_col * width\n    }\n  }\n\ndisplayFaceBox = (box) => {\n  console.log(box);\n  this.setState({box: box});\n}\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imgUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => {\n        if(response){\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, { entries: count}))\n          })\n          .catch(console.log)\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState(initialState)\n    } else if(route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n  \n  render(){\n    const { isSignedIn, imgUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n            <FaceRecognition box={box} imgUrl={imgUrl} />\n          </div>\n          : (\n            route === 'signin'\n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}